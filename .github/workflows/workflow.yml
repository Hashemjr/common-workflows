name: Open PR

on:
  push:
    branches:
      - main

jobs:
  create-PR:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: GitHub app token
        uses: actions/github-script@v6
        id: github-script
        with:
          script: |
            const { Octokit } = require('@octokit/core');
            const { createAppAuth } = require('@octokit/auth-app');

            const appId = process.env.APP_ID;
            const privateKey = process.env.APP_PRIVATE_KEY;
            const clientId = process.env.APP_CLIENT_ID;
            const clientSecret = process.env.APP_CLIENT_SECRET;

            const auth = createAppAuth({
              appId,
              privateKey,
              clientId,
              clientSecret
            });

            const { token } = await auth({ type: 'app' });

            const octokit = new Octokit({ auth: token });

            const repoOwner = 'Hashemjr';
            const repoName = 'gold';
            const branchName = 'feature-branch';

            // Create new branch
            const { data: { object: { sha } } } = await octokit.request('GET /repos/{owner}/{repo}/git/refs/heads/main', {
              owner: repoOwner,
              repo: repoName
            });

            await octokit.request('POST /repos/{owner}/{repo}/git/refs', {
              owner: repoOwner,
              repo: repoName,
              ref: `refs/heads/${branchName}`,
              sha: 'cf8833dfe4425467868a30a5b3724ccf19522ad7'
            });

            // Create a pull request
            const pullRequest = await octokit.request('POST /repos/{owner}/{repo}/pulls', {
              owner: repoOwner,
              repo: repoName,
              title: 'Automated PR',
              head: branchName,
              base: 'main',
              body: 'This is an automated PR created by GitHub Actions'
            });

            // Merge the pull request
            await octokit.request('PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge', {
              owner: repoOwner,
              repo: repoName,
              pull_number: pullRequest.data.number,
              merge_method: 'merge'
            });
          env:
            APP_ID: ${{ secrets.APP_ID }}
            APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
            APP_CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
            APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}

      - name: Display PR status
        run: echo "PR has been created and merged!"

